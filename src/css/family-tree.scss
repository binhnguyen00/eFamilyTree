@use "./app.scss" as *;

.tree-container {
  padding-top: calc(var(--zaui-safe-area-inset-top, 0px) + var(--header-height)) !important;
  padding-left: unset !important;
  padding-right: unset !important;
  padding-bottom: calc(var(--zaui-safe-area-inset-bottom, 0px) + (var(--footer-height) + 10px)) !important;
  background-color: var(--tree-background-color) !important;

  @extend .text-base;

  @media (min-width: 640px) {
    max-width: 100%;
  }
}

.tree-connector {
  background-color: var(--primary-color);
  pointer-events: none;
  stroke-linecap: round;
  border-radius: 2rem;
}

.tree-node {
  position: absolute;
  padding: 15px;
  border-radius: var(--node-border-radius);
}

.tree-node-root {
  background: #6f747e;
}

.tree-node-male {
  background: linear-gradient(to bottom, var(--node-male-color) 25%, #fef3e2 25%);
  border: 2px solid var(--node-border-color);
  position: relative;
  color: var(--node-male-color);
  overflow-wrap: break-word !important;
  border-radius: var(--node-border-radius);

  &::before {
    content: '';         
    position: absolute;
    top: 0;              
    left: 0;
    width: 100%;         
    height: 25%;         
    background: var(--node-male-color);
    border-radius: var(--node-border-radius);
  }
}

.tree-node-female {
  background: linear-gradient(to bottom, var(--node-female-color) 25%, #fef3e2 25%);
  position: relative;
  color: var(--node-female-color);
  border: 2px solid var(--node-border-color);
  overflow-wrap: break-word !important;
  border-radius: var(--node-border-radius);
  text-wrap: wrap;

  &::before {
    content: '';         
    position: absolute;
    top: 0;              
    left: 0;
    width: 100%;         
    height: 25%;         
    background: var(--node-female-color);
    border-radius: var(--node-border-radius);
  }
}

// override react-zoom-pan-pinch css
.react-transform-wrapper {
  height: inherit !important;
  width: unset !important;
  touch-action: manipulation; /* Allows manipulation without triggewring default gestures */
  user-select: none; /* Prevent text selection */
}

// override react-zoom-pan-pinch css
.react-transform-component {
  min-height: 3000px !important;
  touch-action: manipulation; /* Allows manipulation without triggering default gestures */
  user-select: none; /* Prevent text selection */
  border: 1px solid black;
}